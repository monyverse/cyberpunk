import { z } from "zod";
/**
 * Vaults list action schema.
 */
export declare const VaultsActionSchema: z.ZodObject<{
    token: z.ZodOptional<z.ZodEffects<z.ZodString, string | undefined, string>>;
    protocol: z.ZodOptional<z.ZodEffects<z.ZodString, string | undefined, string>>;
    network: z.ZodEffects<z.ZodOptional<z.ZodUnion<[z.ZodEnum<[string, ...string[]]>, z.ZodEnum<["", "all"]>]>>, string | undefined, string | undefined>;
    minTvl: z.ZodOptional<z.ZodNumber>;
    sort: z.ZodOptional<z.ZodObject<{
        field: z.ZodOptional<z.ZodEnum<["tvl", "apy", "name"]>>;
        direction: z.ZodOptional<z.ZodEnum<["asc", "desc"]>>;
    }, "strip", z.ZodTypeAny, {
        field?: "name" | "tvl" | "apy" | undefined;
        direction?: "asc" | "desc" | undefined;
    }, {
        field?: "name" | "tvl" | "apy" | undefined;
        direction?: "asc" | "desc" | undefined;
    }>>;
    apyRange: z.ZodOptional<z.ZodEnum<["1day", "7day", "30day"]>>;
    take: z.ZodOptional<z.ZodNumber>;
    page: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    sort?: {
        field?: "name" | "tvl" | "apy" | undefined;
        direction?: "asc" | "desc" | undefined;
    } | undefined;
    network?: string | undefined;
    token?: string | undefined;
    protocol?: string | undefined;
    minTvl?: number | undefined;
    apyRange?: "1day" | "7day" | "30day" | undefined;
    take?: number | undefined;
    page?: number | undefined;
}, {
    sort?: {
        field?: "name" | "tvl" | "apy" | undefined;
        direction?: "asc" | "desc" | undefined;
    } | undefined;
    network?: string | undefined;
    token?: string | undefined;
    protocol?: string | undefined;
    minTvl?: number | undefined;
    apyRange?: "1day" | "7day" | "30day" | undefined;
    take?: number | undefined;
    page?: number | undefined;
}>;
/**
 * Vault details action schema.
 */
export declare const VaultDetailsActionSchema: z.ZodObject<{
    vaultAddress: z.ZodString;
    network: z.ZodEnum<[string, ...string[]]>;
    apyRange: z.ZodOptional<z.ZodEnum<["1day", "7day", "30day"]>>;
}, "strip", z.ZodTypeAny, {
    network: string;
    vaultAddress: string;
    apyRange?: "1day" | "7day" | "30day" | undefined;
}, {
    network: string;
    vaultAddress: string;
    apyRange?: "1day" | "7day" | "30day" | undefined;
}>;
export declare const VaultHistoricalDataActionSchema: z.ZodObject<{
    vaultAddress: z.ZodString;
    network: z.ZodEnum<[string, ...string[]]>;
    date: z.ZodString;
    apyRange: z.ZodOptional<z.ZodEnum<["1day", "7day", "30day"]>>;
}, "strip", z.ZodTypeAny, {
    network: string;
    date: string;
    vaultAddress: string;
    apyRange?: "1day" | "7day" | "30day" | undefined;
}, {
    network: string;
    date: string;
    vaultAddress: string;
    apyRange?: "1day" | "7day" | "30day" | undefined;
}>;
export declare const depositActionSchema: z.ZodObject<{
    vaultAddress: z.ZodString;
    assetAddress: z.ZodString;
    network: z.ZodEnum<[string, ...string[]]>;
    amount: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    amount: number;
    network: string;
    vaultAddress: string;
    assetAddress: string;
}, {
    amount: number;
    network: string;
    vaultAddress: string;
    assetAddress: string;
}>;
export declare const redeemActionSchema: z.ZodObject<z.objectUtil.extendShape<{
    vaultAddress: z.ZodString;
    assetAddress: z.ZodString;
    network: z.ZodEnum<[string, ...string[]]>;
    amount: z.ZodNumber;
}, {
    all: z.ZodOptional<z.ZodBoolean>;
}>, "strip", z.ZodTypeAny, {
    amount: number;
    network: string;
    vaultAddress: string;
    assetAddress: string;
    all?: boolean | undefined;
}, {
    amount: number;
    network: string;
    vaultAddress: string;
    assetAddress: string;
    all?: boolean | undefined;
}>;
export declare const claimActionSchema: z.ZodObject<Omit<{
    vaultAddress: z.ZodString;
    assetAddress: z.ZodString;
    network: z.ZodEnum<[string, ...string[]]>;
    amount: z.ZodNumber;
}, "amount">, "strip", z.ZodTypeAny, {
    network: string;
    vaultAddress: string;
    assetAddress: string;
}, {
    network: string;
    vaultAddress: string;
    assetAddress: string;
}>;
